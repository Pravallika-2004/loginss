@model WebApplication4.Models.CLUB

@{
    ViewBag.Title = "Club Details";
    Layout = "~/Views/Shared/_ClubsLayout.cshtml";
}

<div class="container club-details-container">
    <h2>@Model.ClubName</h2>
    <img src="@Model.LogoImagePath" alt="@Model.ClubName" class="club-details-logo" />

    <p><strong>Abbreviation:</strong> @Model.Abbreviation</p>
    <p><strong>Description:</strong> @Model.Description</p>
    <p><strong>Total Club Committee Seats:</strong> @Model.TotalClubCommitteeSeats</p>
    <p><strong>Available Club Committee Seats:</strong> @Model.AvailableClubCommitteeSeats</p>
    @*<p><strong>Created Date:</strong> @Model.CreatedDate.ToString("dd MMMM yyyy")</p>*@
    <p><strong>Department:</strong> @ViewBag.DepartmentName</p>
    <p><strong>Mentor Name:</strong> @ViewBag.MentorName</p>
    <p><strong>Mentor Email:</strong> @ViewBag.MentorEmail</p>
    <p>
        name:  @ViewBag.UniversityName
    </p>

    @*<p><strong>Is Active:</strong> @Model.IsActive</p>*@
    @*<p><strong>Approval Status ID:</strong> @Model.ApprovalStatusID</p>*@
    @*<p><strong>Approval Status:</strong> @Model.ApprovalStatusTable.ApprovalStatus</p>*@
</div>

<!-- Next Steps Section -->
<div class="next-step-section">
    <h2 class="next-step-title">Ready to Take the Next Step?</h2>
    <div class="next-step-buttons">
        <a href="#" class="next-step-button" id="openModalBtn" data-club-id="@Model.ClubID">Register as a Club Leader/Member</a>

        <a href="@Url.Action("BrowseEvents", "Clubs", new { clubId = Model.ClubID })" class="next-step-button">Browse Events</a>
    </div>
</div>

<!-- Modal Popup for Registration -->
<div id="registerModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Club Registration</h2>
        <form id="clubRegistrationForm" action="/Clubs/Register" method="post" enctype="multipart/form-data">
            <label for="fullName">Full Name:</label>
            <input type="text" id="fullName" name="fullName" required>

            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>

            <label for="clubID">Club ID:</label>
            <input type="text" id="clubID" name="clubID" value="@Model.ClubID" readonly required>



            <label for="contactNumber">Contact Number:</label>
            <input type="text" id="contactNumber" name="contactNumber" required>

            <label for="preferredRole">Preferred Role:</label>
            <select id="preferredRole" name="preferredRole" required>
                <option value="">Select Role</option>
                <option value="Club Admin">Club Admin</option>
                <option value="President">President</option>
                <option value="Vice President">Vice President</option>
                <option value="Treasurer">Treasurer</option>
                <option value="Secretary">Secretary</option>
                <option value="Member">Member</option>
            </select>

            <label for="university">University:</label>
            
            <input type="text" id="university" name="universityName" value="@ViewBag.UniversityName" readonly required>

            <!-- Hidden input to send University ID -->
            <input type="hidden" id="universityId" name="universityId" value="@ViewBag.UniversityId">


            <label for="department">Department:</label>
            <select id="department" name="departmentId" required>

                <option value="">Select Department</option>
                @if (ViewBag.Departments != null)
                {
                    foreach (var dept in ViewBag.Departments)
                    {
                        <option value="@dept.Id">@dept.Name</option>
                    }
                }
            </select>




            <label for="roleJustification">Why do you fit this role?</label>
            <textarea id="roleJustification" name="roleJustification" required></textarea>

            <!-- Image Upload -->
            <label for="profileImage">Upload Profile Picture:</label>
            <input type="file" id="profileImage" name="profileImage" accept="image/*" required>
            <div id="imagePreviewContainer">
                <img id="imagePreview" src="#" alt="Image Preview" style="display: none;">
            </div>

            <button type="submit" class="submit-button">Submit</button>
        </form>
    </div>
</div>

<div class="social-media-handlers">
    @if (!string.IsNullOrEmpty(Model.ClubName))
    {
        <a href="https://www.facebook.com/club.@Url.Encode(Model.ClubName)" target="_blank" class="facebook-icon">
            <i class="fab fa-facebook-f"></i>
        </a>
    }

    @if (!string.IsNullOrEmpty(Model.ClubName))
    {
        <a href="https://www.instagram.com/club.@Url.Encode(Model.ClubName)" target="_blank" class="instagram-icon">
            <i class="fab fa-instagram"></i>
        </a>
    }

    @if (!string.IsNullOrEmpty(Model.ClubName))
    {
        <a href="https://twitter.com/club.@Url.Encode(Model.ClubName)" target="_blank" class="twitter-icon">
            <i class="fab fa-twitter"></i>
        </a>
    }

    @if (!string.IsNullOrEmpty(Model.ClubName))
    {
        <a href="https://www.linkedin.com/in/club.@Url.Encode(Model.ClubName)" target="_blank" class="linkedin-icon">
            <i class="fab fa-linkedin-in"></i>
        </a>
    }

    @if (!string.IsNullOrEmpty(Model.ClubName))
    {
        <a href="https://wa.me/club.@Url.Encode(Model.ClubName)" target="_blank" class="whatsapp-icon">
            <i class="fab fa-whatsapp"></i>
        </a>
    }

    <a href="mailto:@ViewBag.MentorEmail" class="email-icon">
        <i class="fas fa-envelope"></i>
    </a>
</div>


<style>
    .club-details-container {
        padding: 20px;
    }

        .club-details-container h2 {
            color: darkmagenta;
        }

    .club-details-logo {
        max-width: 200px;
        height: auto;
        display: block;
        margin: 10px auto;
    }

    .custom-button.show-clubs {
        display: inline-block;
        padding: 12px 25px;
        border: 2px solid #ffcc00; /* Yellow border */
        color: white; /* White text */
        text-decoration: none;
        border-radius: 5px;
        font-weight: 600;
        margin-top: 20px;
        background-color: transparent; /* Make the button background transparent */
        transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease; /* Add transition for smooth effects */
        outline: 2px solid white; /* Add white outline */
    }

        .custom-button.show-clubs:hover {
            background-color: #ffcc00; /* Yellow background on hover */
            color: #333; /* Dark text on hover */
            border-color: #ffcc00; /* Keep yellow border */
            outline-color: #ffcc00; /* Change outline color to yellow on hover */
        }

    /* ... other styles ... */

    .next-step-section {
        /*background: transparent;*/ /* No background color */
        text-align: center;
        padding: 21px 0;
        width: 78%;
        box-sizing: border-box;
        border-radius: 15px;
        margin-left: 154px;
        border: 2px solid rgba(255, 102, 0, 0.3); /* Light orange border */
        box-shadow: 0 0 10px 3px rgba(255, 153, 51, 0.5), /* Softer orange glow */
        0 0 15px 6px rgba(255, 153, 51, 0.3), 0 0 20px 8px rgba(255, 153, 51, 0.2);
        filter: drop-shadow(0 0 10px rgba(255, 153, 51, 0.4)); /* Smooth orange glow */
        /*// color: white;*/ /* Ensuring text visibility */
    }




    /* ... other styles ... */

    .next-step-title {
        font-size: 2rem; /* Adjust font size as needed */
        color: orange; /* White text color */
        font-weight: bold;
        margin-bottom: 12px;
    }

    .next-step-buttons {
        display: flex;
        justify-content: center;
    }

    .next-step-button {
        display: inline-block;
        padding: 8px 23px;
        border: 2px solid #ffd700; /* Yellow border */
        color: darkgray; /* White text color */
        text-decoration: none;
        border-radius: 5px;
        font-weight: bold;
        margin: 0 20px; /* Spacing between buttons */
        background-color: transparent; /* Transparent background */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    }

        .next-step-button:hover {
            background-color: #ffd700; /* Yellow background on hover */
            color: #333; /* Dark text on hover */
        }

    /* Modal Styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.4);
    }

    .modal-content {
        background-color: white;
        margin: 10% auto;
        padding: 20px;
        width: 50%;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .close {
        float: right;
        font-size: 25px;
        font-weight: bold;
        cursor: pointer;
    }

        .close:hover {
            color: red;
        }

    /* Form Styling */
    input, select, textarea {
        width: 100%;
        padding: 10px;
        margin: 10px 0;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    /* Image Preview */
    #imagePreviewContainer {
        margin-top: 10px;
        text-align: center;
    }

    #imagePreview {
        max-width: 150px;
        height: auto;
        border-radius: 5px;
        border: 2px solid #ccc;
        padding: 5px;
    }

    .submit-button {
        background-color: orange;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

        .submit-button:hover {
            background-color: darkorange;
        }

    .social-media-handlers {
        position: fixed;
        top: 56%;
        right: 20px;
        transform: translateY(-50%);
        display: flex;
        flex-direction: column;
        gap: 10px;
        z-index: 100; /* Ensure it's above other elements */
    }

        .social-media-handlers a {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #f0f0f0;
            text-decoration: none; /* Add this line to remove underlines */
            /*            color: #333;*/
            font-size: 20px;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

            .social-media-handlers a:hover {
                background-color: #ddd;
                color: black; /* Change color on hover */
            }

    .facebook-icon {
        color: #1877F2;
    }

    .instagram-icon {
        color: #E4405F;
    }

    .twitter-icon {
        color: #1DA1F2;
    }

    .linkedin-icon {
        color: #0077B5;
    }

    .whatsapp-icon {
        color: #25D366;
    }

    .email-icon {
        color: darkgrey;
    }
</style>

<script>

    document.addEventListener("DOMContentLoaded", function () {
        const modal = document.getElementById("registerModal");
        const openModalBtn = document.getElementById("openModalBtn");
        const closeBtn = document.getElementsByClassName("close")[0];
        const universityField = document.getElementById("university");
        const departmentDropdown = document.getElementById("department");
        var form = document.getElementById("clubRegistrationForm");
        const imageInput = document.getElementById("profileImage");
        const imagePreview = document.getElementById("imagePreview");

        // Open Modal and Fetch University & Departments
        openModalBtn.addEventListener("click", function (event) {
            event.preventDefault();
            modal.style.display = "block"; // Show modal

            const clubId = openModalBtn.getAttribute("data-club-id"); // Get Club ID
            document.getElementById("clubID").value = clubId; // Store in hidden field

            // Fetch University Name & Departments
            fetch(`/Clubs/GetUniversityAndDepartments?clubId=${clubId}`)
                .then(response => response.json())
                .then(data => {
                    universityField.value = data.UniversityName || "N/A";

                    departmentDropdown.innerHTML = '<option value="">Select Department</option>';
                    data.Departments.forEach(dept => {
                        let option = document.createElement("option");
                        option.value = dept.Id;
                        option.textContent = dept.Name;
                        departmentDropdown.appendChild(option);
                    });
                })
                .catch(error => console.error("Error fetching data:", error));
        });

        // Close Modal
        closeBtn.addEventListener("click", function () {
            modal.style.display = "none";
        });

        window.addEventListener("click", function (event) {
            if (event.target === modal) {
                modal.style.display = "none";
            }
        });

        // Image Preview
        imageInput.addEventListener("change", function (event) {
            const file = event.target.files[0];
            if (file && file.type.startsWith("image/")) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = "block";
                };
                reader.readAsDataURL(file);
            } else {
                alert("Please select a valid image file (JPG,JPEG, PNG, GIF).");
                imageInput.value = "";
                imagePreview.style.display = "none";
            }
        });

        
        document.querySelector("form").addEventListener("submit", function (event) {
            event.preventDefault();

            var formData = new FormData(this);
            formData.delete("universityName"); // Remove universityName from submission

            console.log("DepartmentID before submission:", formData.get("departmentId"));

            fetch(this.action, {
                method: this.method,
                body: formData
            })
                .then(response => response.json())
                .then(data => console.log(data))
                .catch(error => console.error("Error:", error));
        });


        //document.getElementById("form").addEventListener("submit", function (event) {
        //    event.preventDefault();

        //    let formData = new FormData(this);
        //    formData.delete("universityName"); // Remove universityName from submission

        //    fetch("/your-api-endpoint", {
        //        method: "POST",
        //        body: formData
        //    }).then(response => response.json())
        //        .then(data => console.log(data));
        //});


        // Handle Form Submission via AJAX
        form.addEventListener("submit", function (event) {
            event.preventDefault();

            const formData = new FormData(form);

            fetch("/Clubs/Register", {
                method: "POST",
                body: formData,
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert("Registration successful!");
                        form.reset(); // Reset the form
                        imagePreview.style.display = "none"; // Hide image preview
                        modal.style.display = "none";
                    } else {
                        alert("Error: " + data.message);
                    }
                })
                .catch(error => console.error("Error submitting form:", error));
        });
    });


</script>

